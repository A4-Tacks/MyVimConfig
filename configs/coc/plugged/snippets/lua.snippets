snippet while "while loop" b
while $1 do
	$0
end
endsnippet
snippet until "until loop" b
repeat
	$0
until $1
endsnippet
snippet forloop "for loop" b
for $1 = $2, $3 do
	$0
end
endsnippet
snippet for "for in" b
for $1 in $2 do
	$0
end
endsnippet
snippet break "break" b
break
endsnippet
snippet block "block" b
do
	$1
end$0
endsnippet
snippet blocki "inline block" b
do $1 end$0
endsnippet
snippet if "if" b
if $1 then
	$0
end
endsnippet
snippet elif "elseif" b
elseif $1 then
	$0
endsnippet
snippet else "else" b
else
	$0
endsnippet
snippet goto "goto" b
goto $0
endsnippet
snippet label "label" b
::$1::$0
endsnippet
snippet local "local declare" b
local $0
endsnippet
snippet const "const attribute" w
<const> $0
endsnippet
snippet close "close attribute" w
<close> $0
endsnippet
snippet nil "nil" w
nil
endsnippet
snippet false "false" w
false
endsnippet
snippet true "true" w
true
endsnippet
snippet or "or" w
or $0
endsnippet
snippet and "and" w
and $0
endsnippet
snippet ne "not equal" w
~= $0
endsnippet
snippet function "function define" w
function$1($2)
	$0
end
endsnippet
snippet lambda "inline one expr unnamed function define" w
function($1) return $2 end$0
endsnippet
